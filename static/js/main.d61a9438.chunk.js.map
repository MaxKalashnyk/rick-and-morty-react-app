{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/SortingPanel/SortingPanel.js","Components/FilterPanel/FilterPanel.js","Components/Spinner/Spinner.js","Components/Pagination/Pagination.js","Components/pages/About.js","Components/layout/Header.js","api.js","constants.js","App.js","index.js"],"names":["minSearchInputValueLength","SearchBar","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","searchValue","searchCharacter","_ref","target","value","setState","inherits","createClass","key","react_default","a","createElement","className","type","onChange","name","onClick","props","handleSearch","Component","SortingPanel","htmlFor","id","FilterPanel","onSubmit","handleFilter","Components_SearchBar_SearchBar","Components_SortingPanel_SortingPanel","Spinner","react","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","undefined","i","push","Pagination","gotoPage","page","_this$props$onPageCha","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","_props$totalRecords","_props$pageNeighbours","_this2","aria-label","map","index","href","aria-hidden","e","About","Header","react_router_dom","exact","activeClassName","getCharactersList","asyncToGenerator","regenerator_default","mark","_callee","apiData","apiConvertedData","_args","wrap","_context","prev","next","fetch","sent","json","abrupt","results","stop","APIKeysObj","genderMale","genderFemale","genderUnknown","App","charactersList","characterName","sortingNameParam","gender","performSearch","event","inputEl","elements","find","item","inputValue","toLowerCase","performFilteringByName","bind","assertThisInitialized","data","_this$state","filteredList","filter","character","includes","sort","b","localeCompare","CharacterListComponent","React","lazy","__webpack_require__","then","Components_layout_Header","react_router","path","render","Components_FilterPanel_FilterPanel","Suspense","fallback","Components_Spinner_Spinner","characters","Components_Pagination_Pagination","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d61a9438.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst minSearchInputValueLength = 3;\r\n\r\nexport class SearchBar extends Component {\r\n    state = {\r\n        searchValue: \"\"\r\n    };\r\n\r\n    searchCharacter = ({ target }) => {\r\n        if (target.value.length >= minSearchInputValueLength) {\r\n            this.setState({ searchValue: target.value });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-wrap\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"search-input\"\r\n                    onChange={this.searchCharacter}\r\n                    name=\"search\"\r\n                />\r\n                <button\r\n                    className=\"search-button\"\r\n                    onClick={this.props.handleSearch}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class SortingPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sorting-panel-wrap\">\r\n                <fieldset>\r\n                    <legend>Filter by gender</legend>\r\n                    <label htmlFor=\"gender-all-sort\">\r\n                        All\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-all-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-male-sort\">\r\n                        Male\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-male-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-female-sort\">\r\n                        Female\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-female-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-unknown-sort\">\r\n                        Unknown\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-unknown-sort\"\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>Filter by name</legend>\r\n                    <label htmlFor=\"name-asc\">\r\n                        Aa-Zz\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sorting\"\r\n                            className=\"filter-input\"\r\n                            id=\"name-asc\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"name-desc\">\r\n                        Zz-Aa\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sorting\"\r\n                            className=\"filter-input\"\r\n                            id=\"name-desc\"\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortingPanel;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SortingPanel from \"../SortingPanel/SortingPanel\";\r\n\r\nexport class FilterPanel extends Component {\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"filter-form\"\r\n                onSubmit={this.props.handleSearch}\r\n                onChange={this.props.handleFilter}\r\n            >\r\n                <SearchBar />\r\n                <SortingPanel />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterPanel;\r\n","import React, { Fragment } from \"react\";\r\nimport \"../Spinner/Spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"loader-wrap\">\r\n                <div className=\"loader\" />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Pagination.scss\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        i += step;\r\n    }\r\n\r\n    return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { totalRecords = null, pageNeighbours = 0 } = props;\r\n\r\n        this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n        this.pageNeighbours =\r\n            typeof pageNeighbours === \"number\"\r\n                ? Math.max(0, Math.min(pageNeighbours, 2))\r\n                : 0;\r\n\r\n        this.totalPages = 20;\r\n\r\n        this.state = { currentPage: 1 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gotoPage(1);\r\n    }\r\n\r\n    gotoPage = page => {\r\n        const { onPageChanged = f => f } = this.props;\r\n\r\n        const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n        const paginationData = {\r\n            currentPage,\r\n            totalPages: this.totalPages,\r\n            totalRecords: this.totalRecords\r\n        };\r\n\r\n        this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n    };\r\n\r\n    handleClick = (page, evt) => {\r\n        evt.preventDefault();\r\n        this.gotoPage(page);\r\n    };\r\n\r\n    handleMoveLeft = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n    };\r\n\r\n    handleMoveRight = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n    };\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = this.totalPages;\r\n        const currentPage = this.state.currentPage;\r\n        const pageNeighbours = this.pageNeighbours;\r\n\r\n        const totalNumbers = this.pageNeighbours * 2 + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n            let pages = [];\r\n\r\n            const leftBound = currentPage - pageNeighbours;\r\n            const rightBound = currentPage + pageNeighbours;\r\n            const beforeLastPage = totalPages - 1;\r\n\r\n            const startPage = leftBound > 2 ? leftBound : 2;\r\n            const endPage =\r\n                rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n            pages = range(startPage, endPage);\r\n\r\n            const pagesCount = pages.length;\r\n            const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n            const leftSpill = startPage > 2;\r\n            const rightSpill = endPage < beforeLastPage;\r\n\r\n            const leftSpillPage = LEFT_PAGE;\r\n            const rightSpillPage = RIGHT_PAGE;\r\n\r\n            if (leftSpill && !rightSpill) {\r\n                const extraPages = range(\r\n                    startPage - singleSpillOffset,\r\n                    startPage - 1\r\n                );\r\n                pages = [leftSpillPage, ...extraPages, ...pages];\r\n            } else if (!leftSpill && rightSpill) {\r\n                const extraPages = range(\r\n                    endPage + 1,\r\n                    endPage + singleSpillOffset\r\n                );\r\n                pages = [...pages, ...extraPages, rightSpillPage];\r\n            } else if (leftSpill && rightSpill) {\r\n                pages = [leftSpillPage, ...pages, rightSpillPage];\r\n            }\r\n\r\n            return [1, ...pages, totalPages];\r\n        }\r\n\r\n        return range(1, totalPages);\r\n    };\r\n\r\n    render() {\r\n        if (!this.totalRecords) return null;\r\n\r\n        if (this.totalPages === 1) return null;\r\n\r\n        const { currentPage } = this.state;\r\n        const pages = this.fetchPageNumbers();\r\n\r\n        return (\r\n            <Fragment>\r\n                <nav aria-label=\"Countries Pagination\">\r\n                    <ul className=\"pagination\">\r\n                        {pages.map((page, index) => {\r\n                            if (page === LEFT_PAGE)\r\n                                return (\r\n                                    <li key={index} className=\"page-item\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Previous\"\r\n                                            onClick={this.handleMoveLeft}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">\r\n                                                &laquo;\r\n                                            </span>\r\n                                            <span className=\"sr-only\">\r\n                                                Previous\r\n                                            </span>\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n\r\n                            if (page === RIGHT_PAGE)\r\n                                return (\r\n                                    <li key={index} className=\"page-item\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Next\"\r\n                                            onClick={this.handleMoveRight}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">\r\n                                                &raquo;\r\n                                            </span>\r\n                                            <span className=\"sr-only\">\r\n                                                Next\r\n                                            </span>\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n\r\n                            return (\r\n                                <li\r\n                                    key={index}\r\n                                    className={`page-item${\r\n                                        currentPage === page ? \" active\" : \"\"\r\n                                    }`}\r\n                                >\r\n                                    <a\r\n                                        className=\"page-link\"\r\n                                        href=\"#\"\r\n                                        onClick={e => this.handleClick(page, e)}\r\n                                    >\r\n                                        {page}\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    pageNeighbours: PropTypes.number,\r\n    onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Fragment } from \"react\";\r\n\r\nfunction About() {\r\n    return (\r\n        <Fragment>\r\n            <h1>About page</h1>\r\n            <p>Content of About page</p>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"main-title\">Rick and Morty React application</h1>\r\n            <nav className=\"main-navigation\">\r\n                <ul className=\"main-navigation-list\">\r\n                    <li className=\"main-navigation-list__item\">\r\n                        <NavLink\r\n                            exact={true}\r\n                            activeClassName=\"active\"\r\n                            to=\"/rick-and-morty-react-app/\"\r\n                        >\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"main-navigation-list__item\">\r\n                        <NavLink\r\n                            activeClassName=\"active\"\r\n                            to=\"/rick-and-morty-react-app/about\"\r\n                        >\r\n                            About\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","export const getCharactersList = async (page = 1) => {\r\n    const apiData = await fetch(\r\n        `https://rickandmortyapi.com/api/character/?page=${page}`\r\n    );\r\n    const apiConvertedData = await apiData.json();\r\n    return apiConvertedData.results;\r\n};\r\n","export const sortFilteringStringItems = (key, order = \"asc\") => {\r\n    return function(a, b) {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            return 0;\r\n        }\r\n\r\n        if (\r\n            a[key] === \"\" ||\r\n            typeof a[key] === \"object\" ||\r\n            b[key] === \"\" ||\r\n            typeof b[key] === \"object\"\r\n        ) {\r\n            return 0;\r\n        }\r\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n        let comparison = 0;\r\n        comparison = varA.localeCompare(varB);\r\n\r\n        return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n};\r\n\r\nexport const APIKeysObj = {\r\n    genderMale: \"Male\",\r\n    genderFemale: \"Female\",\r\n    genderUnknown: \"unknown\"\r\n};\r\n\r\nexport const CHARACTERSCOUNT = 20;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport FilterPanel from \"./Components/FilterPanel/FilterPanel\";\r\nimport Spinner from \"./Components/Spinner/Spinner\";\r\nimport Pagination from \"./Components/Pagination/Pagination\";\r\nimport About from \"./Components/pages/About\";\r\nimport Header from \"./Components/layout/Header\";\r\nimport { getCharactersList } from \"./api\";\r\nimport { APIKeysObj } from \"./constants\";\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onPageChanged = this.onPageChanged.bind(this);\r\n    }\r\n\r\n    state = {\r\n        charactersList: [],\r\n        characterName: \"\",\r\n        sortingNameParam: \"\",\r\n        gender: \"\",\r\n        currentPage: null,\r\n        totalPages: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const charactersList = await getCharactersList();\r\n        this.setState({\r\n            charactersList: charactersList\r\n        });\r\n    }\r\n\r\n    performSearch = event => {\r\n        event.preventDefault();\r\n        const elemsList = Array.from(event.target.elements);\r\n        const inputEl = elemsList.find(item => item.name === \"search\");\r\n        if (inputEl) {\r\n            const inputValue = inputEl.value.toLowerCase();\r\n\r\n            this.setState({\r\n                characterName: inputValue\r\n            });\r\n        }\r\n    };\r\n\r\n    performFilteringByName = event => {\r\n        if (event.target.id === \"name-asc\") {\r\n            this.setState({\r\n                sortingNameParam: \"asc\"\r\n            });\r\n        } else if (event.target.id === \"name-desc\") {\r\n            this.setState({\r\n                sortingNameParam: \"desc\"\r\n            });\r\n        } else if (event.target.id === \"gender-all-sort\") {\r\n            this.setState({\r\n                gender: \"\"\r\n            });\r\n        } else if (event.target.id === \"gender-female-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderFemale\r\n            });\r\n        } else if (event.target.id === \"gender-male-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderMale\r\n            });\r\n        } else if (event.target.id === \"gender-unknown-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderUnknown\r\n            });\r\n        }\r\n    };\r\n\r\n    async onPageChanged(data) {\r\n        const { currentPage } = data;\r\n        const charactersList = await getCharactersList(currentPage);\r\n\r\n        this.setState({ currentPage, charactersList });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            charactersList,\r\n            characterName,\r\n            sortingNameParam,\r\n            gender\r\n        } = this.state;\r\n\r\n        let filteredList = charactersList.filter(character => {\r\n            const lowercasedItem = character.name.toLowerCase();\r\n            return lowercasedItem.includes(characterName);\r\n        });\r\n\r\n        if (sortingNameParam === \"asc\") {\r\n            filteredList = filteredList.sort(function(a, b) {\r\n                return a.name.localeCompare(b.name);\r\n            });\r\n        } else if (sortingNameParam === \"desc\") {\r\n            filteredList = filteredList.sort(function(a, b) {\r\n                return b.name.localeCompare(a.name);\r\n            });\r\n        }\r\n\r\n        if (gender !== \"\") {\r\n            filteredList = filteredList.filter(item => {\r\n                return item.gender === gender;\r\n            });\r\n        }\r\n\r\n        const CharacterListComponent = React.lazy(props =>\r\n            import(\"./Components/CharacterList/CharacterList\")\r\n        );\r\n\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route\r\n                        exact\r\n                        path=\"/rick-and-morty-react-app/\"\r\n                        render={props => (\r\n                            <Fragment>\r\n                                <div className=\"container main-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"filter-panel\">\r\n                                            <aside>\r\n                                                <FilterPanel\r\n                                                    handleSearch={\r\n                                                        this.performSearch\r\n                                                    }\r\n                                                    handleFilter={\r\n                                                        this\r\n                                                            .performFilteringByName\r\n                                                    }\r\n                                                />\r\n                                            </aside>\r\n                                        </div>\r\n                                        <div className=\"characters-panel\">\r\n                                            <main>\r\n                                                <React.Suspense\r\n                                                    fallback={<Spinner />}\r\n                                                >\r\n                                                    <CharacterListComponent\r\n                                                        characters={\r\n                                                            filteredList\r\n                                                        }\r\n                                                    />\r\n                                                    <Pagination\r\n                                                        totalRecords={20}\r\n                                                        pageNeighbours={1}\r\n                                                        onPageChanged={\r\n                                                            this.onPageChanged\r\n                                                        }\r\n                                                    />\r\n                                                </React.Suspense>\r\n                                            </main>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/rick-and-morty-react-app/about\"\r\n                        component={About}\r\n                    />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}