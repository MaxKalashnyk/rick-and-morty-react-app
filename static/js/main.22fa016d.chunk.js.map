{"version":3,"sources":["api.js","Components/CharacterItem/CharacterItem.js","Components/CharacterList/CharacterList.js","Components/SearchBar/SearchBar.js","Components/SortingPanel/SortingPanel.js","Components/FilterPanel/FilterPanel.js","constants.js","Components/Spinner/Spinner.js","App.js","index.js"],"names":["getCharactersList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","page","apiData","apiConvertedData","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","concat","sent","json","abrupt","results","stop","apply","this","CharacterItem","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","_this$props$data","props","data","name","id","image","species","gender","origin","status","react_default","createElement","className","toUpperCase","src","alt","Component","CharacterList","characterList","characters","map","character","Components_CharacterItem_CharacterItem","react","minSearchInputValueLength","SearchBar","_getPrototypeOf2","_this","_len","args","Array","_key","call","state","searchValue","searchCharacter","target","setState","type","onChange","onClick","handleSearch","SortingPanel","htmlFor","FilterPanel","onSubmit","handleFilter","Components_SearchBar_SearchBar","Components_SortingPanel_SortingPanel","APIKeysObj","genderMale","genderFemale","genderUnknown","Spinner","App","charactersList","characterName","sortingNameParam","characterPage","performSearch","event","preventDefault","inputEl","from","elements","find","item","inputValue","toLowerCase","performFilteringByName","_this$state","filteredList","filter","includes","sort","b","localeCompare","Components_FilterPanel_FilterPanel","Suspense","fallback","Components_Spinner_Spinner","Components_CharacterList_CharacterList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.22fa016d.chunk.js","sourcesContent":["export const getCharactersList = async (page = \"1\") => {\r\n    const apiData = await fetch(\r\n        `https://rickandmortyapi.com/api/character/?page=${page}`\r\n    );\r\n    const apiConvertedData = await apiData.json();\r\n    return apiConvertedData.results;\r\n};\r\n","import React, { Component } from 'react';\r\nimport './CharacterItem.css';\r\n\r\nexport class CharacterItem extends Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      species,\r\n      image,\r\n      gender,\r\n      origin,\r\n      status\r\n    } = this.props.data;\r\n\r\n    return (\r\n      <div className=\"character-item\">\r\n        <div\r\n          className={`character-item__thumb ${\r\n            gender.toUpperCase() === 'MALE' ? 'thumb-male' : 'thumb-female'\r\n          }`}\r\n        >\r\n          <figure className=\"item-thumb-wrap\">\r\n            <img src={image} alt={name} className=\"item-thumb-image\" />\r\n          </figure>\r\n        </div>\r\n        <h2 className=\"character-item__title\">{name}</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharacterItem;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport CharacterItem from \"../CharacterItem/CharacterItem\";\r\n// import { CHARACTERSCOUNT } from \"../../constants\";\r\n// import Pagination from \"../Pagination/Pagination\";\r\n// import { getCharactersList } from \"../../api\";\r\nimport \"./CharacterList.css\";\r\n\r\nexport class CharacterList extends Component {\r\n    render() {\r\n        const characterList = this.props.characters.map(character => {\r\n            return <CharacterItem key={character.id} data={character} />;\r\n        });\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"characters-wrap row\">{characterList}</div>\r\n                {/* <Pagination\r\n                    items={this.props.characters}\r\n                    onChangePage={this.onChangePage}\r\n                /> */}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CharacterList;\r\n","import React, { Component } from \"react\";\r\n\r\nconst minSearchInputValueLength = 3;\r\n\r\nexport class SearchBar extends Component {\r\n    state = {\r\n        searchValue: \"\"\r\n    };\r\n\r\n    searchCharacter = ({ target }) => {\r\n        if (target.value.length >= minSearchInputValueLength) {\r\n            this.setState({ searchValue: target.value });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-wrap\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"search-input\"\r\n                    onChange={this.searchCharacter}\r\n                    name=\"search\"\r\n                />\r\n                <button\r\n                    className=\"search-button\"\r\n                    onClick={this.props.handleSearch}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class SortingPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sorting-panel-wrap\">\r\n                <fieldset>\r\n                    <legend>Filter by gender</legend>\r\n                    <label htmlFor=\"gender-all-sort\">\r\n                        All\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-all-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-male-sort\">\r\n                        Male\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-male-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-female-sort\">\r\n                        Female\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-female-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-unknown-sort\">\r\n                        Unknown\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-unknown-sort\"\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>Filter by name</legend>\r\n                    <label htmlFor=\"name-asc\">\r\n                        Aa-Zz\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sorting\"\r\n                            className=\"filter-input\"\r\n                            id=\"name-asc\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"name-desc\">\r\n                        Zz-Aa\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sorting\"\r\n                            className=\"filter-input\"\r\n                            id=\"name-desc\"\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortingPanel;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SortingPanel from \"../SortingPanel/SortingPanel\";\r\n\r\nexport class FilterPanel extends Component {\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"filter-form\"\r\n                onSubmit={this.props.handleSearch}\r\n                onChange={this.props.handleFilter}\r\n            >\r\n                <SearchBar />\r\n                <SortingPanel />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterPanel;\r\n","export const sortFilteringStringItems = (key, order = \"asc\") => {\r\n    return function(a, b) {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            return 0;\r\n        }\r\n\r\n        if (\r\n            a[key] === \"\" ||\r\n            typeof a[key] === \"object\" ||\r\n            b[key] === \"\" ||\r\n            typeof b[key] === \"object\"\r\n        ) {\r\n            return 0;\r\n        }\r\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n        let comparison = 0;\r\n        comparison = varA.localeCompare(varB);\r\n\r\n        return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n};\r\n\r\nexport const APIKeysObj = {\r\n    genderMale: \"Male\",\r\n    genderFemale: \"Female\",\r\n    genderUnknown: \"unknown\"\r\n};\r\n\r\n\r\nexport const CHARACTERSCOUNT = 20;\r\n","import React, { Fragment } from \"react\";\r\nimport \"../Spinner/Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"loader-wrap\">\r\n                <div className=\"loader\" />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { getCharactersList } from \"./api\";\r\nimport CharacterList from \"./Components/CharacterList/CharacterList\";\r\nimport FilterPanel from \"./Components/FilterPanel/FilterPanel\";\r\nimport { APIKeysObj } from \"./constants\";\r\nimport Spinner from \"./Components/Spinner/Spinner\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        charactersList: [],\r\n        characterName: \"\",\r\n        sortingNameParam: \"\",\r\n        gender: \"\",\r\n        characterPage: \"1\"\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const charactersList = await getCharactersList();\r\n        this.setState({\r\n            charactersList: charactersList\r\n        });\r\n    }\r\n\r\n    performSearch = event => {\r\n        event.preventDefault();\r\n        const elemsList = Array.from(event.target.elements);\r\n        const inputEl = elemsList.find(item => item.name === \"search\");\r\n        if (inputEl) {\r\n            const inputValue = inputEl.value.toLowerCase();\r\n\r\n            this.setState({\r\n                characterName: inputValue\r\n            });\r\n        }\r\n    };\r\n\r\n    performFilteringByName = event => {\r\n        if (event.target.id === \"name-asc\") {\r\n            this.setState({\r\n                sortingNameParam: \"asc\"\r\n            });\r\n        } else if (event.target.id === \"name-desc\") {\r\n            this.setState({\r\n                sortingNameParam: \"desc\"\r\n            });\r\n        } else if (event.target.id === \"gender-all-sort\") {\r\n            this.setState({\r\n                gender: \"\"\r\n            });\r\n        } else if (event.target.id === \"gender-female-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderFemale\r\n            });\r\n        } else if (event.target.id === \"gender-male-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderMale\r\n            });\r\n        } else if (event.target.id === \"gender-unknown-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderUnknown\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            charactersList,\r\n            characterName,\r\n            sortingNameParam,\r\n            gender\r\n        } = this.state;\r\n\r\n        let filteredList = charactersList.filter(character => {\r\n            const lowercasedItem = character.name.toLowerCase();\r\n            return lowercasedItem.includes(characterName);\r\n        });\r\n\r\n        if (sortingNameParam === \"asc\") {\r\n            filteredList = filteredList.sort(function(a, b) {\r\n                return a.name.localeCompare(b.name);\r\n            });\r\n        } else if (sortingNameParam === \"desc\") {\r\n            filteredList = filteredList.sort(function(a, b) {\r\n                return b.name.localeCompare(a.name);\r\n            });\r\n        }\r\n\r\n        if (gender !== \"\") {\r\n            filteredList = filteredList.filter(item => {\r\n                return item.gender === gender;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"filter-panel\">\r\n                            <aside>\r\n                                <FilterPanel\r\n                                    handleSearch={this.performSearch}\r\n                                    handleFilter={this.performFilteringByName}\r\n                                />\r\n                            </aside>\r\n                        </div>\r\n                        <div className=\"characters-panel\">\r\n                            <main>\r\n                                <React.Suspense fallback={<Spinner />}>\r\n                                    <CharacterList characters={filteredList} />\r\n                                </React.Suspense>\r\n                            </main>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}