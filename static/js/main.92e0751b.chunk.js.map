{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/SortingPanel/SortingPanel.js","Components/FilterPanel/FilterPanel.js","Components/Spinner/Spinner.js","Components/Pagination/Pagination.js","Components/pages/About.js","Components/layout/Header.js","api.js","constants.js","App.js","index.js"],"names":["minSearchInputValueLength","SearchBar","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","searchValue","searchCharacter","_ref","target","value","setState","inherits","createClass","key","react_default","a","createElement","className","type","onChange","name","onClick","props","handleSearch","Component","SortingPanel","htmlFor","id","resetHandler","FilterPanel","onSubmit","handleFilter","Components_SearchBar_SearchBar","Components_SortingPanel_SortingPanel","handleResetFilter","Spinner","react","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","undefined","i","push","Pagination","gotoPage","page","_this$props$onPageCha","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","_props$totalRecords","_props$pageNeighbours","_this2","aria-label","map","index","href","aria-hidden","e","About","Header","react_router_dom","exact","activeClassName","getCharactersList","asyncToGenerator","regenerator_default","mark","_callee","apiData","apiConvertedData","_args","wrap","_context","prev","next","fetch","sent","json","abrupt","results","stop","APIKeysObj","genderMale","genderFemale","genderUnknown","App","charactersList","characterName","sortingNameParam","gender","performSearch","event","inputEl","elements","find","item","inputValue","toLowerCase","performFilteringByName","performResetFilter","characterListCopy","bind","assertThisInitialized","data","_this$state","filteredList","filter","character","includes","sort","b","localeCompare","CharacterListComponent","React","lazy","__webpack_require__","then","Components_layout_Header","react_router","path","render","Components_FilterPanel_FilterPanel","Suspense","fallback","Components_Spinner_Spinner","characters","Components_Pagination_Pagination","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.92e0751b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst minSearchInputValueLength = 3;\r\n\r\nexport class SearchBar extends Component {\r\n    state = {\r\n        searchValue: \"\"\r\n    };\r\n\r\n    searchCharacter = ({ target }) => {\r\n        if (target.value.length >= minSearchInputValueLength) {\r\n            this.setState({ searchValue: target.value });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-wrap\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"search-input\"\r\n                    onChange={this.searchCharacter}\r\n                    name=\"search\"\r\n                />\r\n                <button\r\n                    className=\"search-button\"\r\n                    onClick={this.props.handleSearch}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport \"./SortingPanel.scss\";\r\n\r\nexport class SortingPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sorting-panel-wrap\">\r\n                <fieldset className=\"sorting-fieldset\">\r\n                    <legend className=\"sorting-legend\">Filter by gender</legend>\r\n                    <label htmlFor=\"gender-all-sort\" className=\"sorting-label\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-all-sort\"\r\n                        />\r\n                        <span className=\"sorting-label-text\">All</span>\r\n                    </label>\r\n                    <label htmlFor=\"gender-male-sort\" className=\"sorting-label\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-male-sort\"\r\n                        />\r\n                        <span className=\"sorting-label-text\">Male</span>\r\n                    </label>\r\n                    <label\r\n                        htmlFor=\"gender-female-sort\"\r\n                        className=\"sorting-label\"\r\n                    >\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-female-sort\"\r\n                        />\r\n                        <span className=\"sorting-label-text\">Female</span>\r\n                    </label>\r\n                    <label\r\n                        htmlFor=\"gender-unknown-sort\"\r\n                        className=\"sorting-label\"\r\n                    >\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-unknown-sort\"\r\n                        />\r\n                        <span className=\"sorting-label-text\">Unknown</span>\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"sorting-fieldset\">\r\n                    <legend className=\"sorting-legend\">Filter by name</legend>\r\n                    <label htmlFor=\"name-asc\" className=\"sorting-label\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sorting\"\r\n                            className=\"filter-input\"\r\n                            id=\"name-asc\"\r\n                        />\r\n                        <span className=\"sorting-label-text\">Aa-Zz</span>\r\n                    </label>\r\n                    <label htmlFor=\"name-desc\" className=\"sorting-label\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sorting\"\r\n                            className=\"filter-input\"\r\n                            id=\"name-desc\"\r\n                        />\r\n                        <span className=\"sorting-label-text\">Zz-Aa</span>\r\n                    </label>\r\n                </fieldset>\r\n                <button\r\n                    className=\"reset-filter-button\"\r\n                    type=\"button\"\r\n                    onClick={this.props.resetHandler}\r\n                >\r\n                    Reset filter\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortingPanel;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SortingPanel from \"../SortingPanel/SortingPanel\";\r\n\r\nexport class FilterPanel extends Component {\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"filter-form\"\r\n                onSubmit={this.props.handleSearch}\r\n                onChange={this.props.handleFilter}\r\n            >\r\n                <SearchBar />\r\n                <SortingPanel resetHandler={this.props.handleResetFilter} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterPanel;\r\n","import React, { Fragment } from \"react\";\r\nimport \"../Spinner/Spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"loader-wrap\">\r\n                <div className=\"loader\" />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Pagination.scss\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        i += step;\r\n    }\r\n\r\n    return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { totalRecords = null, pageNeighbours = 0 } = props;\r\n\r\n        this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n        this.pageNeighbours =\r\n            typeof pageNeighbours === \"number\"\r\n                ? Math.max(0, Math.min(pageNeighbours, 2))\r\n                : 0;\r\n\r\n        this.totalPages = 20;\r\n\r\n        this.state = { currentPage: 1 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gotoPage(1);\r\n    }\r\n\r\n    gotoPage = page => {\r\n        const { onPageChanged = f => f } = this.props;\r\n\r\n        const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n        const paginationData = {\r\n            currentPage,\r\n            totalPages: this.totalPages,\r\n            totalRecords: this.totalRecords\r\n        };\r\n\r\n        this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n    };\r\n\r\n    handleClick = (page, evt) => {\r\n        evt.preventDefault();\r\n        this.gotoPage(page);\r\n    };\r\n\r\n    handleMoveLeft = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n    };\r\n\r\n    handleMoveRight = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n    };\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = this.totalPages;\r\n        const currentPage = this.state.currentPage;\r\n        const pageNeighbours = this.pageNeighbours;\r\n\r\n        const totalNumbers = this.pageNeighbours * 2 + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n            let pages = [];\r\n\r\n            const leftBound = currentPage - pageNeighbours;\r\n            const rightBound = currentPage + pageNeighbours;\r\n            const beforeLastPage = totalPages - 1;\r\n\r\n            const startPage = leftBound > 2 ? leftBound : 2;\r\n            const endPage =\r\n                rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n            pages = range(startPage, endPage);\r\n\r\n            const pagesCount = pages.length;\r\n            const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n            const leftSpill = startPage > 2;\r\n            const rightSpill = endPage < beforeLastPage;\r\n\r\n            const leftSpillPage = LEFT_PAGE;\r\n            const rightSpillPage = RIGHT_PAGE;\r\n\r\n            if (leftSpill && !rightSpill) {\r\n                const extraPages = range(\r\n                    startPage - singleSpillOffset,\r\n                    startPage - 1\r\n                );\r\n                pages = [leftSpillPage, ...extraPages, ...pages];\r\n            } else if (!leftSpill && rightSpill) {\r\n                const extraPages = range(\r\n                    endPage + 1,\r\n                    endPage + singleSpillOffset\r\n                );\r\n                pages = [...pages, ...extraPages, rightSpillPage];\r\n            } else if (leftSpill && rightSpill) {\r\n                pages = [leftSpillPage, ...pages, rightSpillPage];\r\n            }\r\n\r\n            return [1, ...pages, totalPages];\r\n        }\r\n\r\n        return range(1, totalPages);\r\n    };\r\n\r\n    render() {\r\n        if (!this.totalRecords) return null;\r\n\r\n        if (this.totalPages === 1) return null;\r\n\r\n        const { currentPage } = this.state;\r\n        const pages = this.fetchPageNumbers();\r\n\r\n        return (\r\n            <Fragment>\r\n                <nav aria-label=\"Countries Pagination\">\r\n                    <ul className=\"pagination\">\r\n                        {pages.map((page, index) => {\r\n                            if (page === LEFT_PAGE)\r\n                                return (\r\n                                    <li key={index} className=\"page-item\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Previous\"\r\n                                            onClick={this.handleMoveLeft}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">\r\n                                                &laquo;\r\n                                            </span>\r\n                                            <span className=\"sr-only\">\r\n                                                Previous\r\n                                            </span>\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n\r\n                            if (page === RIGHT_PAGE)\r\n                                return (\r\n                                    <li key={index} className=\"page-item\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Next\"\r\n                                            onClick={this.handleMoveRight}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">\r\n                                                &raquo;\r\n                                            </span>\r\n                                            <span className=\"sr-only\">\r\n                                                Next\r\n                                            </span>\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n\r\n                            return (\r\n                                <li\r\n                                    key={index}\r\n                                    className={`page-item${\r\n                                        currentPage === page ? \" active\" : \"\"\r\n                                    }`}\r\n                                >\r\n                                    <a\r\n                                        className=\"page-link\"\r\n                                        href=\"#\"\r\n                                        onClick={e => this.handleClick(page, e)}\r\n                                    >\r\n                                        {page}\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    pageNeighbours: PropTypes.number,\r\n    onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n    return (\r\n        <section className=\"page-section\">\r\n            <div className=\"container\">\r\n                <h2 className=\"section-title\">About page</h2>\r\n                <p>\r\n                    Lorem ipsum dolor, sit amet consectetur adipisicing elit.\r\n                    Laborum quisquam impedit alias, optio suscipit sequi\r\n                    officia, et expedita repudiandae cumque temporibus\r\n                    voluptates. Porro aut facilis commodi, minus laborum earum\r\n                    modi!\r\n                </p>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Perspiciatis voluptatibus pariatur ab, incidunt vero\r\n                    reprehenderit eaque corrupti quisquam aspernatur velit\r\n                    quibusdam expedita quasi nisi? Perspiciatis totam eaque\r\n                    saepe placeat error.\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"main-title\">Rick and Morty React application</h1>\r\n            <nav className=\"main-navigation\">\r\n                <ul className=\"main-navigation-list\">\r\n                    <li className=\"main-navigation-list__item\">\r\n                        <NavLink\r\n                            exact={true}\r\n                            activeClassName=\"active\"\r\n                            to=\"/rick-and-morty-react-app/\"\r\n                        >\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"main-navigation-list__item\">\r\n                        <NavLink\r\n                            activeClassName=\"active\"\r\n                            to=\"/rick-and-morty-react-app/about\"\r\n                        >\r\n                            About\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","export const getCharactersList = async (page = 1) => {\r\n    const apiData = await fetch(\r\n        `https://rickandmortyapi.com/api/character/?page=${page}`\r\n    );\r\n    const apiConvertedData = await apiData.json();\r\n    return apiConvertedData.results;\r\n};\r\n","export const sortFilteringStringItems = (key, order = \"asc\") => {\r\n    return function(a, b) {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            return 0;\r\n        }\r\n\r\n        if (\r\n            a[key] === \"\" ||\r\n            typeof a[key] === \"object\" ||\r\n            b[key] === \"\" ||\r\n            typeof b[key] === \"object\"\r\n        ) {\r\n            return 0;\r\n        }\r\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n        let comparison = 0;\r\n        comparison = varA.localeCompare(varB);\r\n\r\n        return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n};\r\n\r\nexport const APIKeysObj = {\r\n    genderMale: \"Male\",\r\n    genderFemale: \"Female\",\r\n    genderUnknown: \"unknown\"\r\n};\r\n\r\nexport const CHARACTERSCOUNT = 20;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport FilterPanel from \"./Components/FilterPanel/FilterPanel\";\r\nimport Spinner from \"./Components/Spinner/Spinner\";\r\nimport Pagination from \"./Components/Pagination/Pagination\";\r\nimport About from \"./Components/pages/About\";\r\nimport Header from \"./Components/layout/Header\";\r\nimport { getCharactersList } from \"./api\";\r\nimport { APIKeysObj } from \"./constants\";\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.characterListCopy = [];\r\n        this.onPageChanged = this.onPageChanged.bind(this);\r\n    }\r\n\r\n    state = {\r\n        charactersList: [],\r\n        characterName: \"\",\r\n        sortingNameParam: \"\",\r\n        gender: \"\",\r\n        currentPage: null,\r\n        totalPages: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const charactersList = await getCharactersList();\r\n        this.characterListCopy = charactersList;\r\n        this.setState({\r\n            charactersList: charactersList\r\n        });\r\n    }\r\n\r\n    performSearch = event => {\r\n        event.preventDefault();\r\n        const elemsList = Array.from(event.target.elements);\r\n        const inputEl = elemsList.find(item => item.name === \"search\");\r\n        if (inputEl) {\r\n            const inputValue = inputEl.value.toLowerCase();\r\n\r\n            this.setState({\r\n                characterName: inputValue\r\n            });\r\n        }\r\n    };\r\n\r\n    performFilteringByName = event => {\r\n        if (event.target.id === \"name-asc\") {\r\n            this.setState({\r\n                sortingNameParam: \"asc\"\r\n            });\r\n        } else if (event.target.id === \"name-desc\") {\r\n            this.setState({\r\n                sortingNameParam: \"desc\"\r\n            });\r\n        } else if (event.target.id === \"gender-all-sort\") {\r\n            this.setState({\r\n                gender: \"\"\r\n            });\r\n        } else if (event.target.id === \"gender-female-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderFemale\r\n            });\r\n        } else if (event.target.id === \"gender-male-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderMale\r\n            });\r\n        } else if (event.target.id === \"gender-unknown-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderUnknown\r\n            });\r\n        }\r\n    };\r\n\r\n    performResetFilter = () => {\r\n        this.setState({\r\n            charactersList: this.characterListCopy,\r\n            characterName: \"\",\r\n            sortingNameParam: \"\",\r\n            gender: \"\"\r\n        });\r\n    };\r\n\r\n    async onPageChanged(data) {\r\n        const { currentPage } = data;\r\n        const charactersList = await getCharactersList(currentPage);\r\n        this.setState({ currentPage, charactersList });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            charactersList,\r\n            characterName,\r\n            sortingNameParam,\r\n            gender\r\n        } = this.state;\r\n\r\n        let filteredList = charactersList.filter(character => {\r\n            const lowercasedItem = character.name.toLowerCase();\r\n            return lowercasedItem.includes(characterName);\r\n        });\r\n\r\n        if (sortingNameParam === \"asc\") {\r\n            filteredList = filteredList.sort(function(a, b) {\r\n                return a.name.localeCompare(b.name);\r\n            });\r\n        } else if (sortingNameParam === \"desc\") {\r\n            filteredList = filteredList.sort(function(a, b) {\r\n                return b.name.localeCompare(a.name);\r\n            });\r\n        }\r\n\r\n        if (gender !== \"\") {\r\n            filteredList = filteredList.filter(item => {\r\n                return item.gender === gender;\r\n            });\r\n        }\r\n\r\n        const CharacterListComponent = React.lazy(props =>\r\n            import(\"./Components/CharacterList/CharacterList\")\r\n        );\r\n\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route\r\n                        exact\r\n                        path=\"/rick-and-morty-react-app/\"\r\n                        render={props => (\r\n                            <div className=\"container main-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"filter-panel\">\r\n                                        <aside>\r\n                                            <FilterPanel\r\n                                                handleSearch={\r\n                                                    this.performSearch\r\n                                                }\r\n                                                handleFilter={\r\n                                                    this.performFilteringByName\r\n                                                }\r\n                                                handleResetFilter={\r\n                                                    this.performResetFilter\r\n                                                }\r\n                                            />\r\n                                        </aside>\r\n                                    </div>\r\n                                    <div className=\"characters-panel\">\r\n                                        <main>\r\n                                            <React.Suspense\r\n                                                fallback={<Spinner />}\r\n                                            >\r\n                                                <CharacterListComponent\r\n                                                    characters={filteredList}\r\n                                                />\r\n                                                <Pagination\r\n                                                    totalRecords={20}\r\n                                                    pageNeighbours={1}\r\n                                                    onPageChanged={\r\n                                                        this.onPageChanged\r\n                                                    }\r\n                                                />\r\n                                            </React.Suspense>\r\n                                        </main>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/rick-and-morty-react-app/about\"\r\n                        component={About}\r\n                    />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}