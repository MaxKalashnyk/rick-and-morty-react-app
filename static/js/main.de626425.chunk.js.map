{"version":3,"sources":["api.js","Components/CharacterItem/CharacterItem.js","constants.js","Components/CharacterList/CharacterList.js","Components/SearchBar/SearchBar.js","Components/SortingPanel/SortingPanel.js","Components/FilterPanel/FilterPanel.js","App.js","index.js"],"names":["getCharactersList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","page","apiData","apiConvertedData","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","concat","sent","json","abrupt","results","stop","apply","this","CharacterItem","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","_this$props$data","props","data","name","id","image","species","gender","origin","status","react_default","createElement","className","toUpperCase","src","alt","Component","APIKeysObj","genderMale","genderFemale","genderUnknown","CharacterList","_this","call","handlePaginationClick","bind","assertThisInitialized","wrapBlock","document","querySelector","console","log","state","paginationContent","total","currentPage","paginationText","totalPages","endPage","i","Pagination","characterPage","insertAdjacentHTML","addEventListener","_handlePaginationClick","target","pageData","charactersList","matches","dataset","setState","_x","characterList","characters","map","character","Components_CharacterItem_CharacterItem","minSearchInputValueLength","SearchBar","_getPrototypeOf2","_len","args","Array","_key","searchValue","searchCharacter","type","onChange","onClick","handleSearch","SortingPanel","htmlFor","FilterPanel","onSubmit","handleFilter","Components_SearchBar_SearchBar","Components_SortingPanel_SortingPanel","App","characterName","sortingNameParam","performSearch","event","preventDefault","inputEl","from","elements","find","item","inputValue","toLowerCase","performFilteringByName","_this$state","filteredList","filter","includes","sort","b","localeCompare","Components_FilterPanel_FilterPanel","Components_CharacterList_CharacterList","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.de626425.chunk.js","sourcesContent":["export const getCharactersList = async (page = \"1\") => {\r\n    const apiData = await fetch(\r\n        `https://rickandmortyapi.com/api/character/?page=${page}`\r\n    );\r\n    const apiConvertedData = await apiData.json();\r\n    return apiConvertedData.results;\r\n};\r\n","import React, { Component } from 'react';\r\nimport './CharacterItem.css';\r\n\r\nexport class CharacterItem extends Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      species,\r\n      image,\r\n      gender,\r\n      origin,\r\n      status\r\n    } = this.props.data;\r\n\r\n    return (\r\n      <div className=\"character-item\">\r\n        <div\r\n          className={`character-item__thumb ${\r\n            gender.toUpperCase() === 'MALE' ? 'thumb-male' : 'thumb-female'\r\n          }`}\r\n        >\r\n          <figure className=\"item-thumb-wrap\">\r\n            <img src={image} alt={name} className=\"item-thumb-image\" />\r\n          </figure>\r\n        </div>\r\n        <h2 className=\"character-item__title\">{name}</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharacterItem;\r\n","export const sortFilteringStringItems = (key, order = \"asc\") => {\r\n    return function(a, b) {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            return 0;\r\n        }\r\n\r\n        if (\r\n            a[key] === \"\" ||\r\n            typeof a[key] === \"object\" ||\r\n            b[key] === \"\" ||\r\n            typeof b[key] === \"object\"\r\n        ) {\r\n            return 0;\r\n        }\r\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n        let comparison = 0;\r\n        comparison = varA.localeCompare(varB);\r\n\r\n        return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n};\r\n\r\nexport const APIKeysObj = {\r\n    genderMale: \"Male\",\r\n    genderFemale: \"Female\",\r\n    genderUnknown: \"unknown\"\r\n};\r\n\r\nexport const Pagination = (\r\n    total,\r\n    currentPage = \"1\",\r\n    className = \"pagination-item\"\r\n) => {\r\n    let paginationText = \"\";\r\n    if (total > 1) {\r\n        let totalPages = total;\r\n        let endPage = total;\r\n        if (totalPages <= 3) {\r\n            for (let i = 1; i <= totalPages; i++) {\r\n                if (i === +currentPage) {\r\n                    paginationText +=\r\n                        \"<a class='currentPage'>\" + currentPage + \"</a>\";\r\n                } else {\r\n                    paginationText +=\r\n                        \"<a class='\" +\r\n                        className +\r\n                        \"' data-page='\" +\r\n                        i +\r\n                        \"'>\" +\r\n                        i +\r\n                        \"</a>\";\r\n                }\r\n            }\r\n        } else {\r\n            if (currentPage > 2 && currentPage <= totalPages - 2) {\r\n                paginationText =\r\n                    \"<a class='\" +\r\n                    className +\r\n                    \"' data-page='\" +\r\n                    1 +\r\n                    \"'>\" +\r\n                    1 +\r\n                    \"</a><span>...</span><a class='\" +\r\n                    className +\r\n                    \"'  data-page='\" +\r\n                    (currentPage - 1) +\r\n                    \"'>\" +\r\n                    (currentPage - 1) +\r\n                    \"</a><a class='currentPage'>\" +\r\n                    currentPage +\r\n                    \"</a><a class='\" +\r\n                    className +\r\n                    \"'   data-page='\" +\r\n                    (+currentPage + 1) +\r\n                    \"'>\" +\r\n                    (+currentPage + 1) +\r\n                    \"</a><span>...</span><a class='\" +\r\n                    className +\r\n                    \"'  data-page='\" +\r\n                    endPage +\r\n                    \"'>\" +\r\n                    endPage +\r\n                    \"</a>\";\r\n            } else if (currentPage <= 2) {\r\n                for (let i = 1; i < 4; i++) {\r\n                    if (i === +currentPage) {\r\n                        paginationText +=\r\n                            \"<a class='currentPage'>\" + currentPage + \"</a>\";\r\n                    } else {\r\n                        paginationText +=\r\n                            \"<a class='\" +\r\n                            className +\r\n                            \"'  data-page='\" +\r\n                            i +\r\n                            \"'>\" +\r\n                            i +\r\n                            \"</a>\";\r\n                    }\r\n                }\r\n                paginationText +=\r\n                    \"<span>...</span><a class='\" +\r\n                    className +\r\n                    \"'  data-page='\" +\r\n                    endPage +\r\n                    \"'>\" +\r\n                    endPage +\r\n                    \"</a>\";\r\n            } else if (currentPage > totalPages - 2) {\r\n                for (let i = totalPages; i > totalPages - 3; i--) {\r\n                    if (i === +currentPage) {\r\n                        paginationText =\r\n                            \"<a class='currentPage'>\" +\r\n                            currentPage +\r\n                            \"</a>\" +\r\n                            paginationText;\r\n                    } else {\r\n                        paginationText =\r\n                            \"<a class='\" +\r\n                            className +\r\n                            \"'  data-page='\" +\r\n                            i +\r\n                            \"'>\" +\r\n                            i +\r\n                            \"</a>\" +\r\n                            paginationText;\r\n                    }\r\n                }\r\n                paginationText =\r\n                    \"<a class='\" +\r\n                    className +\r\n                    \"'  data-page='1'>\" +\r\n                    1 +\r\n                    \"</a><span>...</span>\" +\r\n                    paginationText;\r\n            }\r\n        }\r\n        paginationText = \"<div class='pagination'>\" + paginationText + \"</div>\";\r\n    }\r\n\r\n    return paginationText;\r\n};\r\n\r\nexport const CHARACTERSCOUNT = 20;\r\n","import React, { Component } from \"react\";\r\nimport CharacterItem from \"../CharacterItem/CharacterItem\";\r\nimport { Pagination } from \"../../constants\";\r\nimport { CHARACTERSCOUNT } from \"../../constants\";\r\nimport { getCharactersList } from \"../../api\";\r\nimport \"./CharacterList.css\";\r\n\r\nexport class CharacterList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handlePaginationClick = this.handlePaginationClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const wrapBlock = document.querySelector(\".wrap\");\r\n        console.log(this.state);\r\n        const paginationContent = Pagination(\r\n            CHARACTERSCOUNT,\r\n            this.state ? this.state.characterPage : \"1\"\r\n        );\r\n        wrapBlock.insertAdjacentHTML(\"beforeend\", paginationContent);\r\n        wrapBlock.addEventListener(\"click\", this.handlePaginationClick);\r\n    }\r\n\r\n    async handlePaginationClick({ target }) {\r\n        if (target.matches(\".pagination-item\")) {\r\n            const pageData = target.dataset.page;\r\n            const charactersList = await getCharactersList(pageData);\r\n            this.setState({\r\n                charactersList: charactersList,\r\n                characterPage: pageData\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const characters = !this.state\r\n            ? this.props.characters\r\n            : this.state.charactersList;\r\n        const characterList = characters.map(character => {\r\n            return <CharacterItem key={character.id} data={character} />;\r\n        });\r\n\r\n        return (\r\n            <div className=\"wrap\">\r\n                <div className=\"characters-wrap row\">{characterList}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CharacterList;\r\n","import React, { Component } from \"react\";\r\n\r\nconst minSearchInputValueLength = 3;\r\n\r\nexport class SearchBar extends Component {\r\n    state = {\r\n        searchValue: \"\"\r\n    };\r\n\r\n    searchCharacter = ({ target }) => {\r\n        if (target.value.length >= minSearchInputValueLength) {\r\n            this.setState({ searchValue: target.value });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-wrap\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"search-input\"\r\n                    onChange={this.searchCharacter}\r\n                    name=\"search\"\r\n                />\r\n                <button\r\n                    className=\"search-button\"\r\n                    onClick={this.props.handleSearch}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class SortingPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sorting-panel-wrap\">\r\n                <fieldset>\r\n                    <legend>Filter by gender</legend>\r\n                    <label htmlFor=\"gender-all-sort\">\r\n                        All\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-all-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-male-sort\">\r\n                        Male\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-male-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-female-sort\">\r\n                        Female\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-female-sort\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"gender-unknown-sort\">\r\n                        Unknown\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            className=\"filter-input\"\r\n                            id=\"gender-unknown-sort\"\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>Filter by name</legend>\r\n                    <label htmlFor=\"name-asc\">\r\n                        Aa-Zz\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sorting\"\r\n                            className=\"filter-input\"\r\n                            id=\"name-asc\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"name-desc\">\r\n                        Zz-Aa\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"sorting\"\r\n                            className=\"filter-input\"\r\n                            id=\"name-desc\"\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortingPanel;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SortingPanel from \"../SortingPanel/SortingPanel\";\r\n\r\nexport class FilterPanel extends Component {\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"filter-form\"\r\n                onSubmit={this.props.handleSearch}\r\n                onChange={this.props.handleFilter}\r\n            >\r\n                <SearchBar />\r\n                <SortingPanel />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterPanel;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { getCharactersList } from \"./api\";\r\nimport CharacterList from \"./Components/CharacterList/CharacterList\";\r\nimport FilterPanel from \"./Components/FilterPanel/FilterPanel\";\r\nimport { APIKeysObj } from \"./constants\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        charactersList: [],\r\n        characterName: \"\",\r\n        sortingNameParam: \"\",\r\n        gender: \"\",\r\n        characterPage: \"1\"\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const charactersList = await getCharactersList();\r\n        this.setState({\r\n            charactersList: charactersList\r\n        });\r\n    }\r\n\r\n    performSearch = event => {\r\n        event.preventDefault();\r\n        const elemsList = Array.from(event.target.elements);\r\n        const inputEl = elemsList.find(item => item.name === \"search\");\r\n        if (inputEl) {\r\n            const inputValue = inputEl.value.toLowerCase();\r\n\r\n            this.setState({\r\n                characterName: inputValue\r\n            });\r\n        }\r\n    };\r\n\r\n    performFilteringByName = event => {\r\n        if (event.target.id === \"name-asc\") {\r\n            this.setState({\r\n                sortingNameParam: \"asc\"\r\n            });\r\n        } else if (event.target.id === \"name-desc\") {\r\n            this.setState({\r\n                sortingNameParam: \"desc\"\r\n            });\r\n        } else if (event.target.id === \"gender-all-sort\") {\r\n            this.setState({\r\n                gender: \"\"\r\n            });\r\n        } else if (event.target.id === \"gender-female-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderFemale\r\n            });\r\n        } else if (event.target.id === \"gender-male-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderMale\r\n            });\r\n        } else if (event.target.id === \"gender-unknown-sort\") {\r\n            this.setState({\r\n                gender: APIKeysObj.genderUnknown\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            charactersList,\r\n            characterName,\r\n            sortingNameParam,\r\n            gender\r\n        } = this.state;\r\n\r\n        let filteredList = charactersList.filter(character => {\r\n            const lowercasedItem = character.name.toLowerCase();\r\n            return lowercasedItem.includes(characterName);\r\n        });\r\n\r\n        if (sortingNameParam === \"asc\") {\r\n            filteredList = filteredList.sort(function(a, b) {\r\n                return a.name.localeCompare(b.name);\r\n            });\r\n        } else if (sortingNameParam === \"desc\") {\r\n            filteredList = filteredList.sort(function(a, b) {\r\n                return b.name.localeCompare(a.name);\r\n            });\r\n        }\r\n\r\n        if (gender !== \"\") {\r\n            filteredList = filteredList.filter(item => {\r\n                return item.gender === gender;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"filter-panel\">\r\n                            <aside>\r\n                                <FilterPanel\r\n                                    handleSearch={this.performSearch}\r\n                                    handleFilter={this.performFilteringByName}\r\n                                />\r\n                            </aside>\r\n                        </div>\r\n                        <div className=\"characters-panel\">\r\n                            <main>\r\n                                <CharacterList characters={filteredList} />\r\n                            </main>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}